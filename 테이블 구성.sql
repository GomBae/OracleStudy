/*
    1. 데이터베이스 모델링
    -------------------
    1) 데이터베이스의 생명주기
       요구사항 분석
    2) 데이터베이스 설계
       1. 중복된 데이터
       2. NULL이 있는 컬럼
       3. 매핑테이블
    3) 데이터베이스 첨부된 데이터를 이용해서 -> 구현
    4) 유지보수
    5) 개선점, 검사
    -----------------------
    프로그램은 데이터관리
            ---------- VueJS / ReactJS => 데이터를 관리하는 프로그램
    데이터베이스 : 데이터를 저장하는 장소
    ----------- 메모리 / 파일 / RDBMS (가장 쉽게 제어)
                변수 / 배열 / 클래스 / 파일 (기능별 분리 -> 제어하기 어렵다)
                ------------------ 휘발성 (임시 저장)
    
    요구사항 수집 및 분석
            |
          설계
    ------------------
            |
        개념적 설계 : 엔티티(테이블) => 데이터를 추출(화면)
            |
        논리적 설계 : 상세 => 데이터형, => 테이블 제작 ==> 구체화, 키의 종류
            |
        물리적 설계 : 실제 테이블 (메모리 크기)
        ----------
            => HTML/CSS를 이용해서 출력
    
    -------------------------------------
    데이터베이스 설계시 고려 사항
    1) 무결성 : 이상현상을 방지 (원하는 데이터만 제어) => 수정, 삭제
    2) 일치성 => 데이터간의 응답의 일치성 (참조키)
    3) 보안 => 파밍, SQL문장 => SQL을 자바에서 사용하지 않고 XML로 이용한다 (MyBatis)
    4) 효율성 => 응답시간 (인라인뷰, 인덱스)
    
    테이블
    1) 속성값은 단일값을 가지고 있다
        => 변수 : 값을 한개만 저장
        => actor : 류준열, 유해진 => 테이블을 따로 제작
    2) 속성 (컬럼)은 다른 이름을 가지고 있다(식별자)
    3) 속성의 순서는 상관없다
    4) 테이블안에는 중복된 데이터를 첨부 할 수 없다 (중복이 없는 값을 포함한다) ==> 무결성
    5) 튜플(ROW,RECORD) 순서는 상관없다
    
    키 
    ----
    종류
        슈퍼키 : 식별 => 튜플을 구분하는 모든 키를 모아서 슈퍼키
        후보키 : 모든 테이블은 반드시 후보키 한개를 가지고 있다
        기본키 : NULL값을 포함하지 않는 키 => 중복이 없는 키(튜플 식별자 역할)
                회원가입 => ID ... PRIMARY KEY
        대체키 : 기본키를 잊어버린 경우 => ID를 잊었을때 찾는키가 필요
                UNIQUE
        외래키 : 다른 테이블의 값을 참조 => 매칭 테이블
        
    ------------------------------------------------------------
    게시판 (자유게시판 => 댓글형 (대댓글)
    묻고 답하기
    회원
    공지사항
    --------> 맛집/레시피/여행 => 댓글 (프로시저)
    
       (게시판) 1:N (댓글)
    1. 게시판
        게시물번호
        작성자
        -- 이메일
        -- 홈페이지
        제목
        내용
        작성일
        조회수
        비밀번호 : 사용자 확인
        
    2. 댓글
        댓글번호
        게시물 참조번호
        아이디 =====> 회원에서 참조
        작성자
        내용
        작성일
        -- 좋아요
        *** 다중 댓글
        --------------------
        그룹번호
        그룹 출력순서
        간격
        댓글의 갯수
        참조 댓글
        --------------------
        
        예)                  
            reply
            ORDER BY gno ASC,gstep asc
                             gno gstep gtab root depth
        -----------------------------------------------
       1 AAAAAAA              1    1     0   0     2
       2     => BBBBBBB       1    2     1   1     0
       3     => CCCCCCCC      1    3     1   1     1
       4         => DDDDDDD   1    4     2   3     0
       5 KKKKKKK              2    1     0   0     1
       6     => LLLLLLL       2    2     1   4     0
       
       3. 묻고답하기
         ----------
            => 질문 (사용자) =============> 마이페이지
                => 답변하기 (관리자) ======> 관리자 페이지
                
            게시물번호
            이름
            제목
            내용
            비밀번호
            조회수
            작성일
            답변여부 확인 => y/n
            답변 체크
            => 임의로 필요한 내용 추출
        -------------------------------
        
        4. 회원
            아이디 => 중복체크 ==> 1 (pk)
            비밀번호
            이름
            성별
            생년월일
            이메일 ----- 대체키
            우편번호
            주소
            주소2
            전화번호 ---- 대체키
            소개
            관리자/사용자구분
            
        5. 공지사항
            공지번호
            작성자 ==> 회원(관리자)
            제목
            내용
            공지종류
            작성일 ==> 날짜/시간
            조회수
            비밀번호
            
        6. 자료실
            게시물번호
            작성자
            제목
            내용
            작성일
            조회수
            비밀번호 : 사용자 확인
            파일명
            파일크기
    -----------------------------------------------
    ==> 화면 UI ==> 데이터 수집후에 출력
    => 예약테이블
    => 장바구니
    => 구매테이블
    => 카테고리
    ------------------------------------------------
    맛집
    레시피
    쉐프
    스토어
    서울여행 ==> 명소 / 자연 / 호텔 / 쇼핑몰 / 게스트 하우스 / 이벤트 / 축제,행사 ==> 벤치마킹 사이트
    
    ---------------------------------------------------------------------------------------
    맛집
        맛집정보
        맛집번호
        카테고리번호
        맛집명
        이미지
        평점
        주소
        전화번호
        음식종류
        시간
        주차
        메뉴
        HIT
        JJIM
        LIKE
        
    레시피
        레시피번호
        레시피이미지
        쉐프이미지
        쉐프명
        레시피명
        레시피 설명
        정보1 => 1인분
        정보2 => 15분
        정보3 => 아무나 가능
        재료 ------- 
        소스재료
        조리순서
        ------------------------------------------------
        
    명소/자연/호텔/쇼핑몰/게스트 하우스
        호텔번호
        호텔명
        이미지
        주소
        소개
        
    축제 / 행사
        번호
        행사명
        이미지
        행사소개
        행사기간
        이용시간
        이용금액
        주소
        교통정보
        
    
    
*/
/*
    개념적 설계 => 필요한 데이터 추출
    논리적 설계 => 키종류 설정, 1:1, 1:N ..
     => 정규화
     물리적 설계 => 테이블 완성
                     |
                  데이터 수집 (SELECTOR) => 태그명, 클래스명, 아이디명, 가상선택자
                                            ---- 구분자 (태그)
                                <div></div> 태그
                                            
                                <div id="a">aaa</div>
                                <div id="b">bbb</div>
                                <div class="c">ccc</div>
                                            
                                div#b => #은 id라는 뜻
                                div.c => .은 class라는 뜻
                                
                                
                                <div>aaa</div>
                                <div>bbb</div>
                                <div>ccc</div>
                                
                                div:eq(2) => 가상선택자
*/