-- 2022_12_05
/*
    1. 데이터베이스 시스템 (DBMS)
       => 데이터를 모아서 관리 => 검색,수정,삭제,추가가 가능하게 만든 시스템
       => 오라클 / MySQL / MS-SQL / DB2 / MariaDB
    
    2. 데이터베이스 개념과 특징
       => 통합한 데이터 (데이터베이스 => 폴더)
          => 폴더 : 데이터베이스
          => 파일 : 테이블(구분이 되어있다 => 컬럼)
          => ROW(한줄) => RECORD , Tuple => 자바의 객체
             = 오라클의 단위 => ROW단위로 읽어온다(수정, 삭제, 추가 ==> 한줄 전체)
       => 저장된 데이터 (이미지 : 데이터를 볼 수 없다(보안), 하드디스크에 저장)
                         응용프로그램(JDBC)
                             | ==> SQL (오라클과 통신)
                           오라클
                             |
                          하드디스크 
       => 운영데이터 : 사이트에 필요한 데이터 검색할 목적으로 저장된곳에 접근 (공유)
       => 공유된 데이터 : 접속자 모든 사람이 모든 데이터를 공유할 목적 (오라클 : static)
       => 실시간 접근성 (오라클은 항상 열어둔다) => 자동 실행
       => 계속된 변화 (상품 올리기, 댓글쓰기 ...)
       => 동시공유
       => 값에 의한 참조 (자바 => 주소)
    
    3. 시스템의 구성 요소
       => DBMS (실제 저장된 데이터와 응용프로그램과 연결) => 오라클
       => 실제 저장된 데이터 = 데이터베이스 (XE)
       => 데이터 모델 : 데이터를 저장하는 기법 
                      예) 문자, 숫자, 날짜
                      문자형 : CHAR(1~2000byte) => 고정형, VARCHAR2(1~4000byte) => 가변형, CLOB (4기가)
                      숫자형 : NUMBER : 정수, 실수
                      날짜형 : DATE, TIMESTAMP
                      기타형 : BFILE(file형태 => 4기가) , BLOB(binary형태 => 4기가) => 동영상, 사진
                      ==> 클래스의 데이터 설계
       => 키에 대한 종류
           = 기본키 (중복을 허용하지 않는 키) => ID, 대부분은 숫자로 저장(자동 증가) => PRIMARY KEY(모든 테이블은 기본키를 1개 이상 포함)
                                            무결성의 원칙
           = 후보키 : 기본키를 대체하는 키 (email, tel) => UNIQUE(null값 허용)
           = 외래키(참조키) : 기존에 있는 데이터값을 참조 => FOREIGN KEY
       => 제약조건 : NOT NULL, PRIMARY KEY, UNIQUE, CHECK, FOREIGN KEY, DEFAULT => 원하는 데이터만 첨부
          = 유효성 검사
       => DDL (테이블 제작시 사용) => 연결 (데이터베이스 모델링)
    4. 데이터베이스의 발전 과정
       => 파일시스템 : 구분이 없다 => 관리하기 어렵다 (연결관계를 만들기 어렵다, 보안에 취약하다)
       => 데이터베이스 시스템 : 관리가 쉽다, 연결관계를 가지고있다, 보안이 뛰어나다
       => 웹 데이터베이스 시스템 : ***
       => 분산 데이터베이스 시스템 : 백업
             ----------------- 장점 : 중복의 최소화, 일관성, 독립성, 관리기능, 프로그램연결(자바 => ojdbc)
       => i, g, c
          8i,9i, 10g, 11g, 12c~18c
          i => interner
          g => grid(편집툴)
          c => component (기능) => PL/SQL
    5. 
        응용프로그램 (자바)
            | sql
          오라클
            | read/write
      하드디스크(실제 저장된 데이터)
    6. 데이터베이스 언어 (SQL) => 문자열로 되어 있다
       --------
       SQL종류
       1) DML (데이터 조작 언어)
          = DQL
            명령어 : SELECT => 데이터를 검색할 목적
                    => 형식, 연산자, 내장함수, JOIN, SubQuery
                    => 컬럼 대신 사용, 테이블 대신 사용
                       ------------  -------------
                       스칼라서브쿼리    인라인뷰
          = DML
            명령어 : 
                     INSERT => 데이터 추가
                     UPDATE => 데이터 수정
                     DELETE => 데이터 삭제
                     MERGE => 데이터 병합
       2) DDL (데이터 정의 언어)
          = 테이블, 뷰, 시퀀스, 인덱스, 시노임, PL/SQL(Function, Procedure, Trigger)
            명령어 : 
                    CREATE : 생성 => CREATE TABLE , CREATE VIEW, CREATE INDEX ...
                    ALTER : 수정 (데이터를 설정 ==> 추가(컬럼), 수정(컬럼), 삭제(컬럼) , 이름변경(컬럼)
                                                 ADD       MODIFY    DROP         RENAME
                    DROP : 테이블 통째로 삭제(파일지우기)
                    TRUNCATE : 테이블은 그대로 유지하며 내부 데이터만 삭제
                    RENAME : 테이블 변경
       3) DCL (데이터 제어 언어)
          = GRANT : 권한부여 (VIEW) ==> system, sysdba
          = REVOKE : 권한 해제
       4) TCL (트랜젝션제어 언어)
          = COMMIT : 정상적으로 저장
          = ROLLBACK : 비정상 수행 => 명령을 취소시에 사용
          
       사용자
       ------------------------------------------------
       일반사용자 => 이미 만들어진 프로그램을 사용(USER) => SQL,언어 (x)
       ------------------------------------------------
       SQL사용자 => 프로젝트시에 SQL을 어느정도 하는사람 (데이터베이스 관련 프로그램 제작)
       ------------------------------------------------
       응용프로그래머 => 언어+SQL
                      오라클 연동
       ------------------------------------------------
       데이터베이스 관리자 (DBA) => SQL, DBMS지식
       ------------------------------------------------
       
       데이터베이스 구조
           개념스키마 (설계만 한 상태 => 어떤 데이터가 있는지 확인)
              예) 맛집 ==> 이름, 전화, 주소 ....
           논리스키마
              예) 데이터형 설정 (이름 VARCHAR2, 전화 VARCHAR2 ...)
           물리스키마
              예) 이름 VARCHAR2(200)
              
       ----------------------------------------------------
        컬럼명        id
       ----------------------------------------------------
        키종류        PK
       ----------------------------------------------------
        참조테이블     x
       ----------------------------------------------------
        참조데이터     x
       ----------------------------------------------------
        체크속성      x
       ----------------------------------------------------
        데이터형    VARCHAR2
       ----------------------------------------------------
        데이터크기    20
       ----------------------------------------------------
       
       relation(테이블) : 관련된 데이터를 모아둔 곳 (게시판, 회원, 맛집) => 여러개를 사용(정규화) = 중복 최소화
         = 특징 ----------- JOIN
           => 파일, 데이터베이스 : 폴더
           => 유일값을 가지고 있다(XE)
           => 컬럼은 순서가 없다
           => 데이터 순서가 없다
           => 이차원 구조로 되어 있다 (컬럼, 컬럼에 해당되는 값을 가지고 있다)
         1) 테이블의 구조
            ----------------------------------------
             ID   NAME   SEX   ==> 컬럼으로 구분 => 클래스
            ----------------------------------------
             aaa  홍길동  남자  =============================> RECORD(ROW,Tuple) => 객체,인스턴스
            ----------------------------------------
             bbb  심청이  여자
            ----------------------------------------
*/